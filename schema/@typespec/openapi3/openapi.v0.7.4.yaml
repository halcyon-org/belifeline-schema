openapi: 3.0.0
info:
  title: BeLifeline Server API
  version: v0.7.4
tags:
  - name: Server
  - name: Koyo
  - name: External Information
  - name: Provider
  - name: Admin
paths:
  /admin/client:
    post:
      operationId: Client_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider.ClientData'
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provider.ClientDataCreate'
      security:
        - ApiKeyAuth: []
    get:
      operationId: Client_list
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider.ClientData'
      tags:
        - Admin
      security:
        - ApiKeyAuth: []
  /admin/client/{client_id}:
    post:
      operationId: Client_delete
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Provider.clientId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  delete_client_id:
                    $ref: '#/components/schemas/Provider.clientId'
                required:
                  - delete_client_id
      tags:
        - Admin
      security:
        - ApiKeyAuth: []
  /admin/client/{client_id}/revoke:
    post:
      operationId: Client_revoke
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Provider.clientId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_id:
                    $ref: '#/components/schemas/Provider.clientId'
                  api_key:
                    allOf:
                      - $ref: '#/components/schemas/Types.Auth.apiKey'
                    format: password
                required:
                  - client_id
                  - api_key
      tags:
        - Admin
      security:
        - ApiKeyAuth: []
  /admin/extinfo:
    post:
      operationId: ExtInfo_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  external_id:
                    allOf:
                      - $ref: '#/components/schemas/ExtInfo.ExtInfoId'
                    description: |-
                      This ID can be obtained through admin api.
                      It is a human friendly format like GitHub repository names.
                      Only the pattern `^[a-z_-]{1,64}$` is allowed.
                    title: External ID generated by the admin api
                  external_name:
                    type: string
                    title: External infomation name
                  external_description:
                    type: string
                    title: External infomation description
                  license:
                    type: string
                    title: External information license
                  license_description:
                    type: string
                    title: External information license description
                  first_entry_at:
                    type: string
                    format: date-time
                  last_updated_at:
                    type: string
                    format: date-time
                  updated_history:
                    type: array
                    items:
                      type: string
                      format: date-time
                  api_key:
                    allOf:
                      - $ref: '#/components/schemas/Types.Auth.apiKey'
                    format: password
                required:
                  - external_id
                  - external_name
                  - external_description
                  - license
                  - license_description
                  - first_entry_at
                  - last_updated_at
                  - updated_history
                  - api_key
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtInfo.ExternalInfomationCreate'
      security:
        - ApiKeyAuth: []
  /admin/extinfo/{extinfo_id}:
    delete:
      operationId: ExtInfo_delete
      parameters:
        - name: extinfo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ExtInfo.ExtInfoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  delete_extinfo_id:
                    $ref: '#/components/schemas/ExtInfo.ExtInfoId'
                required:
                  - delete_extinfo_id
      tags:
        - Admin
      security:
        - ApiKeyAuth: []
  /admin/extinfo/{extinfo_id}/revoke:
    post:
      operationId: ExtInfo_revoke
      parameters:
        - name: extinfo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ExtInfo.ExtInfoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  extinfo_id:
                    $ref: '#/components/schemas/ExtInfo.ExtInfoId'
                  api_key:
                    allOf:
                      - $ref: '#/components/schemas/Types.Auth.apiKey'
                    format: password
                required:
                  - extinfo_id
                  - api_key
      tags:
        - Admin
      security:
        - ApiKeyAuth: []
  /admin/koyo:
    post:
      operationId: Koyo_create
      summary: Create new koyo information
      description: |-
        Set up koyo's basic information and register it in the database.
        You can get koyo_id by hitting this endpoint.
        For updating basic information, please use /koyo api instead of admin api
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  koyo_id:
                    allOf:
                      - $ref: '#/components/schemas/Koyo.koyoId'
                    description: |-
                      This ID can be obtained through admin api.
                      It is a human friendly format like GitHub repository names.
                      Only the pattern `^[a-z_-]{1,64}$` is allowed.
                    title: Koyo ID generated by the admin api
                  koyo_name:
                    type: string
                    minLength: 1
                    maxLength: 64
                    title: Koyo name
                  koyo_description:
                    type: string
                    maxLength: 2048
                    title: Koyo description
                  need_external:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExtInfo.ExtInfoId'
                  koyo_params:
                    type: object
                    additionalProperties:
                      type: string
                    description: Koyo parameters. The key is the parameter name and the value is the default value.
                    title: 'param name: param default'
                  koyo_scales:
                    type: array
                    items:
                      $ref: '#/components/schemas/Koyo.koyoScale'
                    description: Koyo scales is resolution (e.g. one data per meter). Returns a list of supported scales.
                    title: Koyo scales is resolution (e.g. one data per meter)
                  koyo_data_ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/Koyo.koyoDataId'
                    title: Koyo data IDs
                  version:
                    allOf:
                      - $ref: '#/components/schemas/Types.Common.version'
                    title: Koyo version
                  license:
                    type: string
                    title: Koyo license
                  ext_licenses:
                    type: array
                    items:
                      type: string
                    description: Licenses for primary information and other information used by the koyo.
                    title: Koyo source license for use
                  first_entry_at:
                    type: string
                    format: date-time
                  last_entry_at:
                    type: string
                    format: date-time
                  last_updated_at:
                    type: string
                    format: date-time
                  api_key:
                    allOf:
                      - $ref: '#/components/schemas/Types.Auth.apiKey'
                    format: password
                required:
                  - koyo_id
                  - koyo_name
                  - koyo_description
                  - need_external
                  - koyo_params
                  - koyo_scales
                  - koyo_data_ids
                  - version
                  - license
                  - ext_licenses
                  - first_entry_at
                  - last_entry_at
                  - last_updated_at
                  - api_key
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Koyo.KoyoInfomationCreate'
      security:
        - ApiKeyAuth: []
  /admin/koyo/{koyo_id}:
    delete:
      operationId: Koyo_delete
      summary: Delete koyo information
      parameters:
        - name: koyo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Koyo.koyoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  delete_koyo_id:
                    allOf:
                      - $ref: '#/components/schemas/Koyo.koyoId'
                    title: Deleted koyo id
                required:
                  - delete_koyo_id
      tags:
        - Admin
      security:
        - ApiKeyAuth: []
  /admin/koyo/{koyo_id}/revoke:
    post:
      operationId: Koyo_revoke
      summary: Revoke koyo api key
      parameters:
        - name: koyo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Koyo.koyoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  koyo_id:
                    $ref: '#/components/schemas/Koyo.koyoId'
                  api_key:
                    allOf:
                      - $ref: '#/components/schemas/Types.Auth.apiKey'
                    format: password
                required:
                  - koyo_id
                  - api_key
      tags:
        - Admin
      security:
        - ApiKeyAuth: []
  /extinfo:
    get:
      operationId: ExtInfo_list
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtInfo.ExternalInfomation'
      tags:
        - External Information
      security:
        - ApiKeyAuth: []
  /extinfo/example_id/data:
    get:
      operationId: ExampleInfo_get
      summary: Get example data endpoint
      parameters:
        - name: area
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Types.GeoJSON.MultiPolygon'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contentType:
                      type: string
                      enum:
                        - image/jpeg
                    data:
                      $ref: '#/components/schemas/ExtInfo.ExampleInfo.ExampleData'
                  required:
                    - contentType
                    - data
      tags:
        - External Information
      security:
        - ApiKeyAuth: []
    post:
      operationId: ExampleInfo_post
      summary: Post example data endpoint
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      tags:
        - External Information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExtInfo.ExampleInfo.ExampleData'
      security:
        - ApiKeyAuth: []
  /extinfo/{extinfo_id}:
    get:
      operationId: ExtInfo_get
      parameters:
        - name: extinfo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ExtInfo.ExtInfoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtInfo.ExternalInfomation'
      tags:
        - External Information
      security:
        - ApiKeyAuth: []
  /koyo:
    get:
      operationId: Koyo_list
      summary: Get a list of koyos' basic information
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Koyo.KoyoInfomation'
      tags:
        - Koyo
  /koyo/{koyo_id}:
    put:
      operationId: EachKoyo_update
      summary: Update information on own koyo
      parameters:
        - name: koyo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Koyo.koyoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koyo.KoyoInfomation'
      tags:
        - Koyo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Koyo.KoyoInfomationCreateOrUpdate'
      security:
        - ApiKeyAuth: []
    get:
      operationId: EachKoyo_get
      summary: Get koyos' basic information
      parameters:
        - name: koyo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Koyo.koyoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koyo.KoyoInfomation'
      tags:
        - Koyo
  /koyo/{koyo_id}/data:
    post:
      operationId: EachKoyoData_new
      summary: Post new data of own koyo
      parameters:
        - name: koyo_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Koyo.koyoId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koyo.KoyoData'
      tags:
        - Koyo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Koyo.KoyoDataCreate'
      security:
        - ApiKeyAuth: []
  /provider/data:
    get:
      operationId: Data_list
      summary: List of koyo's basic information
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Koyo.KoyoInfomation'
      tags:
        - Provider
      security:
        - ApiKeyAuth: []
  /provider/data/{altorithm_id}:
    get:
      operationId: EachData_get
      summary: Get data from the koyo
      parameters:
        - name: altorithm_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Koyo.koyoId'
        - name: type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Provider.RequestType'
        - name: koyo_data_id
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Koyo.koyoDataId'
        - name: area
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Types.GeoJSON.MultiPolygon'
        - name: until
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Types.Date.DateUntil'
        - name: until_entry
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Types.Date.DateUntil'
        - name: param
          in: query
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
        - name: scale
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Koyo.koyoScale'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koyo.KoyoData'
      tags:
        - Provider
      security:
        - ApiKeyAuth: []
  /status:
    get:
      operationId: Status_get
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: string
      tags:
        - Server
components:
  schemas:
    ExtInfo.ExampleInfo.ExampleData:
      type: object
      required:
        - area
        - image
      properties:
        area:
          $ref: '#/components/schemas/Types.GeoJSON.MultiPolygon'
        image:
          type: string
          format: byte
      title: Example data
    ExtInfo.ExtInfoId:
      type: string
      enum:
        - example_id
    ExtInfo.ExternalInfomation:
      type: object
      required:
        - external_id
        - external_name
        - external_description
        - license
        - license_description
        - first_entry_at
        - last_updated_at
        - updated_history
      properties:
        external_id:
          allOf:
            - $ref: '#/components/schemas/ExtInfo.ExtInfoId'
          description: |-
            This ID can be obtained through admin api.
            It is a human friendly format like GitHub repository names.
            Only the pattern `^[a-z_-]{1,64}$` is allowed.
          title: External ID generated by the admin api
        external_name:
          type: string
          title: External infomation name
        external_description:
          type: string
          title: External infomation description
        license:
          type: string
          title: External information license
        license_description:
          type: string
          title: External information license description
        first_entry_at:
          type: string
          format: date-time
        last_updated_at:
          type: string
          format: date-time
        updated_history:
          type: array
          items:
            type: string
            format: date-time
      description: Basic information about the external information.
      title: External information
    ExtInfo.ExternalInfomationCreate:
      type: object
      required:
        - external_name
        - external_description
        - license
        - license_description
        - first_entry_at
        - last_updated_at
        - updated_history
      properties:
        external_name:
          type: string
          title: External infomation name
        external_description:
          type: string
          title: External infomation description
        license:
          type: string
          title: External information license
        license_description:
          type: string
          title: External information license description
        first_entry_at:
          type: string
          format: date-time
        last_updated_at:
          type: string
          format: date-time
        updated_history:
          type: array
          items:
            type: string
            format: date-time
      description: Basic information about the external information.
      title: External information
    ExtInfo.Versions:
      type: string
      enum:
        - lastest
    Koyo.DataType:
      type: string
      enum:
        - image
        - csv
        - json
    Koyo.KoyoData:
      type: object
      required:
        - koyo_data_id
        - koyo_id
        - version
        - koyo_scale
        - content_type
        - content
        - entry_at
        - target_at
      properties:
        koyo_data_id:
          $ref: '#/components/schemas/Koyo.koyoDataId'
        koyo_id:
          allOf:
            - $ref: '#/components/schemas/Koyo.koyoId'
          description: The ID of the koyo that generated the data.
          title: Koyo ID
        version:
          allOf:
            - $ref: '#/components/schemas/Types.Common.version'
          description: The version of the koyo used to generate the data.
          title: Koyo version
        koyo_scale:
          allOf:
            - $ref: '#/components/schemas/Koyo.koyoScale'
          description: The resolution of the data.
          title: Koyo scale
        content_type:
          allOf:
            - $ref: '#/components/schemas/Koyo.DataType'
          description: 'The type of data format.(enum: image, csv, json...)'
          title: Data type
        content:
          type: string
          format: byte
          description: The data content itself.
          title: Data content
        entry_at:
          type: string
          format: date-time
          title: Data entry time
        target_at:
          type: string
          format: date-time
          description: |-
            The time at which the data is targeted.
            The time at which data processing began (= the primary data from which the data was processed was updated).
            In other words, it indicates which time the data is based on.")
          title: Data target time
      description: The data is the result of processing by the koyo.
      title: Koyo data
    Koyo.KoyoDataCreate:
      type: object
      required:
        - version
        - koyo_scale
        - content_type
        - content
      properties:
        version:
          allOf:
            - $ref: '#/components/schemas/Types.Common.version'
          description: The version of the koyo used to generate the data.
          title: Koyo version
        koyo_scale:
          allOf:
            - $ref: '#/components/schemas/Koyo.koyoScale'
          description: The resolution of the data.
          title: Koyo scale
        content_type:
          allOf:
            - $ref: '#/components/schemas/Koyo.DataType'
          description: 'The type of data format.(enum: image, csv, json...)'
          title: Data type
        content:
          type: string
          format: byte
          description: The data content itself.
          title: Data content
      description: The data is the result of processing by the koyo.
      title: Koyo data
    Koyo.KoyoInfomation:
      type: object
      required:
        - koyo_id
        - koyo_name
        - koyo_description
        - need_external
        - koyo_params
        - koyo_scales
        - koyo_data_ids
        - version
        - license
        - ext_licenses
        - first_entry_at
        - last_entry_at
        - last_updated_at
      properties:
        koyo_id:
          allOf:
            - $ref: '#/components/schemas/Koyo.koyoId'
          description: |-
            This ID can be obtained through admin api.
            It is a human friendly format like GitHub repository names.
            Only the pattern `^[a-z_-]{1,64}$` is allowed.
          title: Koyo ID generated by the admin api
        koyo_name:
          type: string
          minLength: 1
          maxLength: 64
          title: Koyo name
        koyo_description:
          type: string
          maxLength: 2048
          title: Koyo description
        need_external:
          type: array
          items:
            $ref: '#/components/schemas/ExtInfo.ExtInfoId'
        koyo_params:
          type: object
          additionalProperties:
            type: string
          description: Koyo parameters. The key is the parameter name and the value is the default value.
          title: 'param name: param default'
        koyo_scales:
          type: array
          items:
            $ref: '#/components/schemas/Koyo.koyoScale'
          description: Koyo scales is resolution (e.g. one data per meter). Returns a list of supported scales.
          title: Koyo scales is resolution (e.g. one data per meter)
        koyo_data_ids:
          type: array
          items:
            $ref: '#/components/schemas/Koyo.koyoDataId'
          title: Koyo data IDs
        version:
          allOf:
            - $ref: '#/components/schemas/Types.Common.version'
          title: Koyo version
        license:
          type: string
          title: Koyo license
        ext_licenses:
          type: array
          items:
            type: string
          description: Licenses for primary information and other information used by the koyo.
          title: Koyo source license for use
        first_entry_at:
          type: string
          format: date-time
        last_entry_at:
          type: string
          format: date-time
        last_updated_at:
          type: string
          format: date-time
      description: Basic information about the koyo.
      title: Koyo information
    Koyo.KoyoInfomationCreate:
      type: object
      required:
        - koyo_name
        - koyo_description
        - need_external
        - koyo_params
        - koyo_scales
        - koyo_data_ids
        - version
        - license
        - ext_licenses
      properties:
        koyo_name:
          type: string
          minLength: 1
          maxLength: 64
          title: Koyo name
        koyo_description:
          type: string
          maxLength: 2048
          title: Koyo description
        need_external:
          type: array
          items:
            $ref: '#/components/schemas/ExtInfo.ExtInfoId'
        koyo_params:
          type: object
          additionalProperties:
            type: string
          description: Koyo parameters. The key is the parameter name and the value is the default value.
          title: 'param name: param default'
        koyo_scales:
          type: array
          items:
            $ref: '#/components/schemas/Koyo.koyoScale'
          description: Koyo scales is resolution (e.g. one data per meter). Returns a list of supported scales.
          title: Koyo scales is resolution (e.g. one data per meter)
        koyo_data_ids:
          type: array
          items:
            $ref: '#/components/schemas/Koyo.koyoDataId'
          title: Koyo data IDs
        version:
          allOf:
            - $ref: '#/components/schemas/Types.Common.version'
          title: Koyo version
        license:
          type: string
          title: Koyo license
        ext_licenses:
          type: array
          items:
            type: string
          description: Licenses for primary information and other information used by the koyo.
          title: Koyo source license for use
      description: Basic information about the koyo.
      title: Koyo information
    Koyo.KoyoInfomationCreateOrUpdate:
      type: object
      required:
        - koyo_id
        - koyo_name
        - koyo_description
        - need_external
        - koyo_params
        - koyo_scales
        - koyo_data_ids
        - version
        - license
        - ext_licenses
      properties:
        koyo_id:
          allOf:
            - $ref: '#/components/schemas/Koyo.koyoId'
          description: |-
            This ID can be obtained through admin api.
            It is a human friendly format like GitHub repository names.
            Only the pattern `^[a-z_-]{1,64}$` is allowed.
          title: Koyo ID generated by the admin api
        koyo_name:
          type: string
          minLength: 1
          maxLength: 64
          title: Koyo name
        koyo_description:
          type: string
          maxLength: 2048
          title: Koyo description
        need_external:
          type: array
          items:
            $ref: '#/components/schemas/ExtInfo.ExtInfoId'
        koyo_params:
          type: object
          additionalProperties:
            type: string
          description: Koyo parameters. The key is the parameter name and the value is the default value.
          title: 'param name: param default'
        koyo_scales:
          type: array
          items:
            $ref: '#/components/schemas/Koyo.koyoScale'
          description: Koyo scales is resolution (e.g. one data per meter). Returns a list of supported scales.
          title: Koyo scales is resolution (e.g. one data per meter)
        koyo_data_ids:
          type: array
          items:
            $ref: '#/components/schemas/Koyo.koyoDataId'
          title: Koyo data IDs
        version:
          allOf:
            - $ref: '#/components/schemas/Types.Common.version'
          title: Koyo version
        license:
          type: string
          title: Koyo license
        ext_licenses:
          type: array
          items:
            type: string
          description: Licenses for primary information and other information used by the koyo.
          title: Koyo source license for use
      description: Basic information about the koyo.
      title: Koyo information
    Koyo.Versions:
      type: string
      enum:
        - lastest
    Koyo.koyoDataId:
      type: string
      format: uuid
    Koyo.koyoId:
      type: string
      pattern: ^[a-z_-]{1,64}$
    Koyo.koyoScale:
      type: number
      format: float
    Provider.ClientData:
      type: object
      required:
        - client_id
        - username
        - api_key
        - created_at
        - last_used_at
        - last_updated_at
      properties:
        client_id:
          $ref: '#/components/schemas/Provider.clientId'
        username:
          type: string
        api_key:
          allOf:
            - $ref: '#/components/schemas/Types.Auth.apiKey'
          format: password
        created_at:
          type: string
          format: date-time
        last_used_at:
          type: string
          format: date-time
          description: The last time the client used the api.
        last_updated_at:
          type: string
          format: date-time
          description: The last time the client updated the data.
      description: Data for the client to use the provider api.
      title: Client data
    Provider.ClientDataCreate:
      type: object
      required:
        - username
      properties:
        username:
          type: string
      description: Data for the client to use the provider api.
      title: Client data
    Provider.RequestType:
      type: string
      enum:
        - TileMapService
        - GeoJSON
    Provider.Versions:
      type: string
      enum:
        - latest
    Provider.clientId:
      type: string
      format: uuid
    Server.Versions:
      type: string
      enum:
        - lastest
    Types.Auth.apiKey:
      type: string
    Types.Common.uuid:
      type: string
      format: uuid
    Types.Common.version:
      type: string
      pattern: ^\d+\.\d+\.\d+$
      description: Semantic versioning
    Types.Date.DateUntil:
      type: object
      properties:
        before:
          type: string
          format: date-time
        after:
          type: string
          format: date-time
    Types.GeoJSON.MultiPoint:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            items: {}
    Types.GeoJSON.MultiPolygon:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              items: {}
    Types.GeoJSON.Point:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          type: array
          items: {}
    Types.GeoJSON.Polygon:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            items: {}
    Types.Versions:
      type: string
      enum:
        - latest
    Versions:
      type: string
      enum:
        - v0.7.4
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: api_key
